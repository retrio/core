package strafe.emu.nes;


// each interpreted command is a 16-bit int consisting of 3 parts:
// opcode (8 bits), addressing mode (4 bits), cpu ticks (4 bits)
abstract Command(Int) from Int to Int
{
	public inline static function newCmd(code:OpCode, mode:AddressingMode, ticks:Int):Command
		return Std.int(code) + Std.int(mode) + Std.int(ticks);

	public inline static function getCode(cmd:Command):OpCode
		return (cmd & 0xFF0000);

	public inline static function getMode(cmd:Command):AddressingMode
		return (cmd & 0xFF00);

	public inline static function getTicks(cmd:Command):Int
		return (cmd & 0xFF);

	public static inline function decodeByte(byte:Int):Command
	{
		var code:OpCode;
		var mode:AddressingMode = AddressingMode.Absolute;
		var ticks:Int = 2;

		switch(byte) {
			// this section auto-generated by parse6502.py
			case 0x00: { code=OpCode.BRK; ticks=7; }
			case 0x01: { code=OpCode.ORA; mode=AddressingMode.IndirectX; ticks=6; }
			case 0x05: { code=OpCode.ORA; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x06: { code=OpCode.ASL; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x08: { code=OpCode.PHP; ticks=3; }
			case 0x09: { code=OpCode.ORA; mode=AddressingMode.Immediate; }
			case 0x0A: { code=OpCode.ASL; mode=AddressingMode.Accumulator; }
			case 0x0D: { code=OpCode.ORA; ticks=4; }
			case 0x0E: { code=OpCode.ASL; ticks=6; }
			case 0x10: { code=OpCode.BPL; mode=AddressingMode.Relative; }
			case 0x11: { code=OpCode.ORA; mode=AddressingMode.IndirectY; ticks=5; }
			case 0x15: { code=OpCode.ORA; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x16: { code=OpCode.ASL; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x18: { code=OpCode.CLC; }
			case 0x19: { code=OpCode.ORA; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0x1D: { code=OpCode.ORA; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0x1E: { code=OpCode.ASL; mode=AddressingMode.AbsoluteX; ticks=7; }
			case 0x20: { code=OpCode.JSR; ticks=6; }
			case 0x21: { code=OpCode.AND; mode=AddressingMode.IndirectX; ticks=6; }
			case 0x24: { code=OpCode.BIT; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x25: { code=OpCode.AND; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x26: { code=OpCode.ROL; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x28: { code=OpCode.PLP; ticks=4; }
			case 0x29: { code=OpCode.AND; mode=AddressingMode.Immediate; }
			case 0x2A: { code=OpCode.ROL; mode=AddressingMode.Accumulator; }
			case 0x2C: { code=OpCode.BIT; ticks=4; }
			case 0x2D: { code=OpCode.AND; ticks=4; }
			case 0x2E: { code=OpCode.ROL; ticks=6; }
			case 0x30: { code=OpCode.BMI; mode=AddressingMode.Relative; }
			case 0x31: { code=OpCode.AND; mode=AddressingMode.IndirectY; ticks=5; }
			case 0x35: { code=OpCode.AND; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x36: { code=OpCode.ROL; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x38: { code=OpCode.SEC; }
			case 0x39: { code=OpCode.AND; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0x3D: { code=OpCode.AND; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0x3E: { code=OpCode.ROL; mode=AddressingMode.AbsoluteX; ticks=7; }
			case 0x40: { code=OpCode.RTI; ticks=6; }
			case 0x41: { code=OpCode.EOR; mode=AddressingMode.IndirectX; ticks=6; }
			case 0x45: { code=OpCode.EOR; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x46: { code=OpCode.LSR; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x48: { code=OpCode.PHA; ticks=3; }
			case 0x49: { code=OpCode.EOR; mode=AddressingMode.Immediate; }
			case 0x4A: { code=OpCode.LSR; mode=AddressingMode.Accumulator; }
			case 0x4C: { code=OpCode.JMP; ticks=3; }
			case 0x4D: { code=OpCode.EOR; ticks=4; }
			case 0x4E: { code=OpCode.LSR; ticks=6; }
			case 0x50: { code=OpCode.BVC; mode=AddressingMode.Relative; }
			case 0x51: { code=OpCode.EOR; mode=AddressingMode.IndirectY; ticks=5; }
			case 0x55: { code=OpCode.EOR; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x56: { code=OpCode.LSR; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x58: { code=OpCode.CLI; }
			case 0x59: { code=OpCode.EOR; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0x5D: { code=OpCode.EOR; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0x5E: { code=OpCode.LSR; mode=AddressingMode.AbsoluteX; ticks=7; }
			case 0x60: { code=OpCode.RTS; ticks=6; }
			case 0x61: { code=OpCode.ADC; mode=AddressingMode.IndirectX; ticks=6; }
			case 0x65: { code=OpCode.ADC; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x66: { code=OpCode.ROR; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x68: { code=OpCode.PLA; ticks=4; }
			case 0x69: { code=OpCode.ADC; mode=AddressingMode.Immediate; }
			case 0x6A: { code=OpCode.ROR; mode=AddressingMode.Accumulator; }
			case 0x6C: { code=OpCode.JMP; mode=AddressingMode.Indirect; ticks=5; }
			case 0x6D: { code=OpCode.ADC; ticks=4; }
			case 0x6E: { code=OpCode.ROR; ticks=6; }
			case 0x70: { code=OpCode.BVS; mode=AddressingMode.Relative; }
			case 0x71: { code=OpCode.ADC; mode=AddressingMode.IndirectY; ticks=5; }
			case 0x75: { code=OpCode.ADC; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x76: { code=OpCode.ROR; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x78: { code=OpCode.SEI; }
			case 0x79: { code=OpCode.ADC; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0x7D: { code=OpCode.ADC; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0x7E: { code=OpCode.ROR; mode=AddressingMode.AbsoluteX; ticks=7; }
			case 0x81: { code=OpCode.STA; mode=AddressingMode.IndirectX; ticks=6; }
			case 0x84: { code=OpCode.STY; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x85: { code=OpCode.STA; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x86: { code=OpCode.STX; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0x88: { code=OpCode.DEY; }
			case 0x8A: { code=OpCode.TXA; }
			case 0x8C: { code=OpCode.STY; ticks=4; }
			case 0x8D: { code=OpCode.STA; ticks=4; }
			case 0x8E: { code=OpCode.STX; ticks=4; }
			case 0x90: { code=OpCode.BCC; mode=AddressingMode.Relative; }
			case 0x91: { code=OpCode.STA; mode=AddressingMode.IndirectY; ticks=6; }
			case 0x94: { code=OpCode.STY; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x95: { code=OpCode.STA; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0x96: { code=OpCode.STX; mode=AddressingMode.ZeroPageY; ticks=4; }
			case 0x98: { code=OpCode.TYA; }
			case 0x99: { code=OpCode.STA; mode=AddressingMode.AbsoluteY; ticks=5; }
			case 0x9A: { code=OpCode.TXS; }
			case 0x9D: { code=OpCode.STA; mode=AddressingMode.AbsoluteX; ticks=5; }
			case 0xA0: { code=OpCode.LDY; mode=AddressingMode.Immediate; }
			case 0xA1: { code=OpCode.LDA; mode=AddressingMode.IndirectX; ticks=6; }
			case 0xA2: { code=OpCode.LDX; mode=AddressingMode.Immediate; }
			case 0xA4: { code=OpCode.LDY; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xA5: { code=OpCode.LDA; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xA6: { code=OpCode.LDX; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xA8: { code=OpCode.TAY; }
			case 0xA9: { code=OpCode.LDA; mode=AddressingMode.Immediate; }
			case 0xAA: { code=OpCode.TAX; }
			case 0xAC: { code=OpCode.LDY; ticks=4; }
			case 0xAD: { code=OpCode.LDA; ticks=4; }
			case 0xAE: { code=OpCode.LDX; ticks=4; }
			case 0xB0: { code=OpCode.BCS; mode=AddressingMode.Relative; }
			case 0xB1: { code=OpCode.LDA; mode=AddressingMode.IndirectY; ticks=5; }
			case 0xB4: { code=OpCode.LDY; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0xB5: { code=OpCode.LDA; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0xB6: { code=OpCode.LDX; mode=AddressingMode.ZeroPageY; ticks=4; }
			case 0xB8: { code=OpCode.CLV; }
			case 0xB9: { code=OpCode.LDA; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0xBA: { code=OpCode.TSX; }
			case 0xBC: { code=OpCode.LDY; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0xBD: { code=OpCode.LDA; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0xBE: { code=OpCode.LDX; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0xC0: { code=OpCode.CPY; mode=AddressingMode.Immediate; }
			case 0xC1: { code=OpCode.CMP; mode=AddressingMode.IndirectX; ticks=6; }
			case 0xC4: { code=OpCode.CPY; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xC5: { code=OpCode.CMP; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xC6: { code=OpCode.DEC; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0xC8: { code=OpCode.INY; }
			case 0xC9: { code=OpCode.CMP; mode=AddressingMode.Immediate; }
			case 0xCA: { code=OpCode.DEX; }
			case 0xCC: { code=OpCode.CPY; ticks=4; }
			case 0xCD: { code=OpCode.CMP; ticks=4; }
			case 0xCE: { code=OpCode.DEC; ticks=6; }
			case 0xD0: { code=OpCode.BNE; mode=AddressingMode.Relative; }
			case 0xD1: { code=OpCode.CMP; mode=AddressingMode.IndirectY; ticks=5; }
			case 0xD5: { code=OpCode.CMP; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0xD6: { code=OpCode.DEC; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0xD8: { code=OpCode.CLD; }
			case 0xD9: { code=OpCode.CMP; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0xDD: { code=OpCode.CMP; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0xDE: { code=OpCode.DEC; mode=AddressingMode.AbsoluteX; ticks=7; }
			case 0xE0: { code=OpCode.CPX; mode=AddressingMode.Immediate; }
			case 0xE1: { code=OpCode.SBC; mode=AddressingMode.IndirectX; ticks=6; }
			case 0xE4: { code=OpCode.CPX; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xE5: { code=OpCode.SBC; mode=AddressingMode.ZeroPage; ticks=3; }
			case 0xE6: { code=OpCode.INC; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0xE8: { code=OpCode.INX; }
			case 0xE9: { code=OpCode.SBC; mode=AddressingMode.Immediate; }
			case 0xEA: { code=OpCode.NOP; }
			case 0xEC: { code=OpCode.CPX; ticks=4; }
			case 0xED: { code=OpCode.SBC; ticks=4; }
			case 0xEE: { code=OpCode.INC; ticks=6; }
			case 0xF0: { code=OpCode.BEQ; mode=AddressingMode.Relative; }
			case 0xF1: { code=OpCode.SBC; mode=AddressingMode.IndirectY; ticks=5; }
			case 0xF5: { code=OpCode.SBC; mode=AddressingMode.ZeroPageX; ticks=4; }
			case 0xF6: { code=OpCode.INC; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0xF8: { code=OpCode.SED; }
			case 0xF9: { code=OpCode.SBC; mode=AddressingMode.AbsoluteY; ticks=4; }
			case 0xFD: { code=OpCode.SBC; mode=AddressingMode.AbsoluteX; ticks=4; }
			case 0xFE: { code=OpCode.INC; mode=AddressingMode.AbsoluteX; ticks=7; }

			// the following are unofficial OpCode
			// http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_OpCode

			// NOOP +
			case 0x1A,0x3A,0x5A,0x7A,0xDA,0xFA: {
				code=OpCode.NOP;
			}
			case 0x80,0x82,0x89,0xC2,0xE2: {
				code=OpCode.IGN1;
			}
			case 0x04,0x44,0x64: {
				code=OpCode.IGN1;
				ticks=3;
			}
			case 0x14,0x34,0x54,0x74,0xD4,0xF4: {
				code=OpCode.IGN1;
				ticks=4;
			}
			case 0x0C: {
				code=OpCode.IGN2;
				ticks = 4;
			}
			case 0x1C,0x3C,0x5C,0x7C,0xDC,0xFC: {
				code=OpCode.IGN2;
				// warning: can be 5 ticks if crossing page boundary
				ticks=4;
			}
			// LAX
			case 0xA3: {
				code=OpCode.LAX;
				mode=AddressingMode.IndirectX;
				ticks=6;
			}
			case 0xA7: {
				code=OpCode.LAX;
				mode=AddressingMode.ZeroPage;
				ticks=3;
			}
			case 0xAF: {
				code=OpCode.LAX;
				mode=AddressingMode.Absolute;
				ticks=4;
			}
			case 0xB3: {
				code=OpCode.LAX;
				mode=AddressingMode.IndirectY;
				ticks=5;
			}
			case 0xB7: {
				code=OpCode.LAX;
				mode=AddressingMode.ZeroPageY;
				ticks=4;
			}
			case 0xBF: {
				code=OpCode.LAX;
				mode=AddressingMode.AbsoluteY;
				ticks=4;
			}
			// SAX
			case 0x83: {
				code=OpCode.SAX;
				mode=AddressingMode.IndirectX;
				ticks=6;
			}
			case 0x87: {
				code=OpCode.SAX;
				mode=AddressingMode.ZeroPage;
				ticks=3;
			}
			case 0x8F: {
				code=OpCode.SAX;
				mode=AddressingMode.Absolute;
				ticks=4;
			}
			case 0x97: {
				code=OpCode.SAX;
				mode=AddressingMode.ZeroPageY;
				ticks=4;
			}
			// SBC
			case 0xEB: { code=OpCode.SBC; mode=AddressingMode.Immediate; }
			// RLA
			case 0x23: { code=OpCode.RLA; mode=AddressingMode.IndirectX; ticks=8; }
			case 0x27: { code=OpCode.RLA; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x2F: { code=OpCode.RLA; mode=AddressingMode.Absolute; ticks=6; }
			case 0x33: { code=OpCode.RLA; mode=AddressingMode.IndirectY; ticks=8; }
			case 0x37: { code=OpCode.RLA; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x3B: { code=OpCode.RLA; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0x3F: { code=OpCode.RLA; mode=AddressingMode.AbsoluteX; ticks=7; }
			// RRA
			case 0x63: { code=OpCode.RRA; mode=AddressingMode.IndirectX; ticks=8; }
			case 0x67: { code=OpCode.RRA; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x6F: { code=OpCode.RRA; mode=AddressingMode.Absolute; ticks=6; }
			case 0x73: { code=OpCode.RRA; mode=AddressingMode.IndirectY; ticks=8; }
			case 0x77: { code=OpCode.RRA; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x7B: { code=OpCode.RRA; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0x7F: { code=OpCode.RRA; mode=AddressingMode.AbsoluteX; ticks=7; }
			// SLO
			case 0x03: { code=OpCode.SLO; mode=AddressingMode.IndirectX; ticks=8; }
			case 0x07: { code=OpCode.SLO; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x0F: { code=OpCode.SLO; mode=AddressingMode.Absolute; ticks=6; }
			case 0x13: { code=OpCode.SLO; mode=AddressingMode.IndirectY; ticks=8; }
			case 0x17: { code=OpCode.SLO; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x1B: { code=OpCode.SLO; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0x1F: { code=OpCode.SLO; mode=AddressingMode.AbsoluteX; ticks=7; }
			// SRE
			case 0x43: { code=OpCode.SRE; mode=AddressingMode.IndirectX; ticks=8; }
			case 0x47: { code=OpCode.SRE; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0x4F: { code=OpCode.SRE; mode=AddressingMode.Absolute; ticks=6; }
			case 0x53: { code=OpCode.SRE; mode=AddressingMode.IndirectY; ticks=8; }
			case 0x57: { code=OpCode.SRE; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0x5B: { code=OpCode.SRE; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0x5F: { code=OpCode.SRE; mode=AddressingMode.AbsoluteX; ticks=7; }
			// DCP
			case 0xC3: { code=OpCode.DCP; mode=AddressingMode.IndirectX; ticks=8; }
			case 0xC7: { code=OpCode.DCP; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0xCF: { code=OpCode.DCP; mode=AddressingMode.Absolute; ticks=6; }
			case 0xD3: { code=OpCode.DCP; mode=AddressingMode.IndirectY; ticks=8; }
			case 0xD7: { code=OpCode.DCP; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0xDB: { code=OpCode.DCP; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0xDF: { code=OpCode.DCP; mode=AddressingMode.AbsoluteX; ticks=7; }
			// ISC
			case 0xE3: { code=OpCode.ISC; mode=AddressingMode.IndirectX; ticks=8; }
			case 0xE7: { code=OpCode.ISC; mode=AddressingMode.ZeroPage; ticks=5; }
			case 0xEF: { code=OpCode.ISC; mode=AddressingMode.Absolute; ticks=6; }
			case 0xF3: { code=OpCode.ISC; mode=AddressingMode.IndirectY; ticks=8; }
			case 0xF7: { code=OpCode.ISC; mode=AddressingMode.ZeroPageX; ticks=6; }
			case 0xFB: { code=OpCode.ISC; mode=AddressingMode.AbsoluteY; ticks=7; }
			case 0xFF: { code=OpCode.ISC; mode=AddressingMode.AbsoluteX; ticks=7; }

			default: code=OpCode.UNKNOWN;
		}

		return newCmd(code, mode, ticks);
	}
}
